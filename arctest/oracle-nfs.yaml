---
# 3.8 required for the volume relative path name to config file 
version: '3.8'
services:
  metadata:
    image: postgres:14-alpine
    container_name: arcion-metadata-test
    ports:
      - 5432
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=Passw0rd 
      - PGCLIENTENCODING=utf-8
    volumes:
      - arcion-metadata:/var/lib/postgresql/data
      - ./init.d:/docker-entrypoint-initdb.d

  ui:
    image:  arcionlabs/replicant-on-premises:test
    ports:
      - 8080
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=Passw0rd 
      - ARCION_LICENSE=${ARCION_LICENSE}
      - DB_HOST=arcion-metadata-test
      - DB_PORT=5432
      - DB_DATABASE=arcion
      - DB_USERNAME=arcion
      - DB_PASSWORD=Passw0rd
    volumes:
      - ./arcion-share/data:/data
      - ./arcion-share/config:/config
      - ./arcion-share/libs:/libs
      # these are oracle
      - oraxe11g:/opt/mnt/oraxe11g/oradata:ro
      - oraxe2130:/opt/mnt/oraxe2130/oradata:ro
      - oraee1930:/opt/mnt/oraee1930/oradata:ro
    depends_on:
      - metadata  

  workloads:
    image:  robertslee/arcdemo:test
    privileged: true
    ports:
      - 7681
    environment:
      - ARCION_LICENSE=${ARCION_LICENSE}
      # utf-8 for java, mysql, pgsql
      - LANG=C.UTF-8
      - PGCLIENTENCODING=utf-8

      # metadata
      - METADATA_DB_HOST=arcion-metadata-test
      - METADATA_DB_PORT=5432
      - METADATA_DB_DATABASE=arcion
      - METADATA_DB_USERNAME=arcion
      - METADATA_DB_PASSWORD=Passw0rd

      # confluent
      - CFLT_SRC_ID=$CFLT_SRC_ID
      - CFLT_SRC_SECRET=$CFLT_SRC_SECRET
      - CFLT_SRC_ENDPOINT=$CFLT_SRC_ENDPOINT

      - CFLT_DST_ID=$CFLT_DST_ID
      - CFLT_DST_SECRET=$CFLT_DST_SECRET
      - CFLT_DST_ENDPOINT=$CFLT_DST_ENDPOINT

      # minio
      - MINIO_SRC_ID=$MINIO_SRC_ID
      - MINIO_SRC_SECRET=$MINIO_SRC_SECRET
      - MINIO_SRC_ENDPOINT=$MINIO_SRC_ENDPOINT
  
      - MINIO_DST_ID=$MINIO_DST_ID
      - MINIO_DST_SECRET=$MINIO_DST_SECRET
      - MINIO_DST_ENDPOINT=$MINIO_DST_ENDPOINT

      # Snowflake
      - SNOW_SRC_ID=$SNOW_SRC_ID
      - SNOW_SRC_SECRET=$SNOW_SRC_SECRET
      - SNOW_SRC_ENDPOINT=$SNOW_SRC_ENDPOINT
      - SNOW_SRC_WAREHOUSE=$SNOW_SRC_WAREHOUSE

      - SNOW_DST_ID=$SNOW_DST_ID
      - SNOW_DST_SECRET=$SNOW_DST_SECRET
      - SNOW_DST_ENDPOINT=$SNOW_DST_ENDPOINT
      - SNOW_DST_WAREHOUSE=$SNOW_DST_WAREHOUSE

      # Google Big Query the key is gzip | base64 -w 0
      - GBQ_SRC_LOCATION=$GBQ_SRC_LOCATION	
      - GBQ_SRC_SECRET=$GBQ_SRC_SECRET
      - GBQ_SRC_ENDPOINT=$GBQ_SRC_ENDPOINT

      - GBQ_DST_LOCATION=$GBQ_DST_LOCATION	
      - GBQ_DST_SECRET=$GBQ_DST_SECRET
      - GBQ_DST_ENDPOINT=$GBQ_DST_ENDPOINT
      # AWS
      - AWS_SRC_ID=$AWS_SRC_ID
      - AWS_SRC_SECRET=$AWS_SRC_SECRET

      - AWS_DST_ID=$AWS_DST_ID
      - AWS_DST_SECRET=$AWS_DST_SECRET    
    volumes:
      # same as the UI
      - ./arcion-share/data:/opt/mnt/data
      - ./arcion-share/config:/opt/mnt/config
      - ./arcion-share/libs:/opt/mnt/libs
      # loadgen specific
      - ./arcion-share/loadgen:/opt/mnt/loadgen
      # test specific to edit scripts
      - ../../arcion-demo/scripts/:/scripts
      # test specific to use different replicant cli
      - arcion-bin-2304307:/arcion
      # these are remapped to internal directories via volremap.sh in side docker
      # these are oracle
      - oraxe11g:/opt/mnt/oraxe11g/oradata:ro
      - oraxe2130:/opt/mnt/oraxe2130/oradata:ro
      - oraee1930:/opt/mnt/oraee1930/oradata:ro

    depends_on:
      - metadata  

networks:
  default:
    name: arcnet
    external: true

volumes:
  arcion-bin-2304307:
    external: true    
  # oracle volumes
  oraxe11g:
    driver: local
    driver_opts:
      type: "nfs"
      # addr = nfs server IP address
      o: addr=${NFS_SERVER},nfsvers=3 #,timeo=600 ,rsize=32768,wsize=32768,actime=0,noac
      # device = dir from NFS server exposing to client
      device: ":/oradata/xe/11g"
  oraxe2130:
    driver: local
    driver_opts:
      type: "nfs"
      # addr = nfs server IP address
      o: addr=${NFS_SERVER},nfsvers=3 #,timeo=600 ,rsize=32768,wsize=32768,actime=0,noac
      # device = dir from NFS server exposing to client
      device: ":/oradata/xe/2130"
  oraee1930:
    driver: local
    driver_opts:
      type: "nfs"
      # addr = nfs server IP address
      o: addr=${NFS_SERVER},nfsvers=3 #,timeo=600 ,rsize=32768,wsize=32768,actime=0,noac
      # device = dir from NFS server exposing to client
      device: ":/oradata/ee/1930"
